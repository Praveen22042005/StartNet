"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/entrepreneur/home/page",{

/***/ "(app-pages-browser)/./src/config/api.ts":
/*!***************************!*\
  !*** ./src/config/api.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_ROUTES: () => (/* binding */ API_ROUTES),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   startupApi: () => (/* binding */ startupApi)\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\nconst API_ROUTES = {\n    AUTH: {\n        SIGNUP: \"\".concat(API_BASE_URL, \"/auth/signup\"),\n        SIGNIN: \"\".concat(API_BASE_URL, \"/auth/signin\"),\n        SIGNOUT: \"\".concat(API_BASE_URL, \"/auth/signout\"),\n        UPDATE_PASSWORD: \"\".concat(API_BASE_URL, \"/auth/password/update\")\n    },\n    PROFILE: {\n        GET: \"\".concat(API_BASE_URL, \"/profile\"),\n        UPDATE: \"\".concat(API_BASE_URL, \"/profile\"),\n        DELETE: \"\".concat(API_BASE_URL, \"/profile\"),\n        UPLOAD_PROFILE_PICTURE: \"\".concat(API_BASE_URL, \"/profile/upload-profile-picture\")\n    },\n    STARTUPS: {\n        BASE: \"\".concat(API_BASE_URL, \"/entrepreneur/startups\"),\n        DETAIL: (id)=>\"\".concat(API_BASE_URL, \"/entrepreneur/startups/\").concat(id),\n        UPLOAD_LOGO: \"\".concat(API_BASE_URL, \"/entrepreneur/upload-startup-logo\") // Add this new route\n    },\n    INVESTOR_PROFILE: {\n        GET: \"\".concat(API_BASE_URL, \"/investor/profile\"),\n        UPDATE: \"\".concat(API_BASE_URL, \"/investor/profile\"),\n        UPLOAD_PROFILE_PICTURE: \"\".concat(API_BASE_URL, \"/investor/profile/upload-profile-picture\"),\n        GET_ALL: \"\".concat(API_BASE_URL, \"/investor/profile/all\"),\n        GET_BY_ID: \"\".concat(API_BASE_URL, \"/api/investor/profile\") // Add this line if it doesn't exist\n    },\n    INVESTOR: {\n        STARTUPS: {\n            GET_ALL: \"\".concat(API_BASE_URL, \"/investor/startups/all\")\n        },\n        UPDATE_PASSWORD: \"\".concat(API_BASE_URL, \"/investor/settings/update-password\"),\n        DELETE_ACCOUNT: \"\".concat(API_BASE_URL, \"/investor/settings/delete-account\")\n    }\n};\n// API functions for Startups\nconst startupApi = {\n    // Get all startups for the logged-in entrepreneur\n    fetchStartups: async ()=>{\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('Authentication required');\n        }\n        const response = await fetch(API_ROUTES.STARTUPS.BASE, {\n            headers: {\n                'Authorization': \"Bearer \".concat(token)\n            }\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || 'Failed to fetch startups');\n        }\n        return response.json();\n    },\n    // Get startup by ID\n    fetchStartup: async (id)=>{\n        console.log(\"Fetching startup with ID: \".concat(id));\n        console.log('Request URL:', API_ROUTES.STARTUPS.DETAIL(id));\n        const response = await fetch(API_ROUTES.STARTUPS.DETAIL(id));\n        console.log('Response Status:', response.status);\n        if (!response.ok) {\n            const error = await response.json();\n            console.error('Error details:', error);\n            throw new Error(error.message || 'Failed to fetch startup');\n        }\n        return response.json();\n    },\n    // Create new startup\n    createStartup: async (data)=>{\n        try {\n            const response = await fetch(API_ROUTES.STARTUPS.BASE, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n                },\n                body: JSON.stringify(data)\n            });\n            const result = await response.json();\n            if (!response.ok) {\n                throw new Error(result.message || 'Failed to create startup');\n            }\n            return result;\n        } catch (error) {\n            console.error('Create startup error:', error);\n            throw error;\n        }\n    },\n    // Update startup\n    updateStartup: async (id, startup)=>{\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('Authentication required. Please sign in.');\n        }\n        try {\n            const response = await fetch(\"\".concat(API_ROUTES.STARTUPS.DETAIL(id)), {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': \"Bearer \".concat(token)\n                },\n                body: JSON.stringify({\n                    ...startup,\n                    user: undefined\n                })\n            });\n            if (response.status === 401) {\n                localStorage.removeItem('token');\n                throw new Error('Session expired. Please sign in again.');\n            }\n            if (response.status === 403) {\n                throw new Error('You are not authorized to update this startup');\n            }\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.message || 'Update failed');\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Update error:', error);\n            throw new Error(\"Update failed: \".concat(error instanceof Error ? error.message : 'Unknown error'));\n        }\n    },\n    // Delete startup\n    deleteStartup: async (id)=>{\n        const response = await fetch(API_ROUTES.STARTUPS.DETAIL(id), {\n            method: 'DELETE',\n            headers: {\n                'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n            }\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || 'Failed to delete startup');\n        }\n        return response.json();\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (API_BASE_URL);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/config/api.ts\n"));

/***/ })

});